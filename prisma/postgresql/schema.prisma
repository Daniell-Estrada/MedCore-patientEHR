// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client-postgresql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_POSTGRESQL")
}

enum DiagnosticState {
  ACTIVE
  ARCHIVED
  DELETED
}

model Patient {
  id              String    @id @default(uuid())
  userId          String    @unique
  docuementNumber String    @unique
  birthDate       DateTime
  age             Int
  gender          String
  phone           String?
  address         String?
  state           String?
  diagnostics     Diagnostic[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Diagnostic {
  id              String   @id @default(uuid())
  patientId       String
  doctorId        String
  title           String
  description     String
  symptoms        String
  diagnosis       String
  treatment       String
  observations    String?
  date            DateTime @default(now())
  nextAppointment DateTime?
  state           DiagnosticState @default(ACTIVE)
  documents       DiagnosticDocument[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  patient Patient @relation(fields: [patientId], references: [id])

  @@index([patientId])
  @@index([doctorId])
}

model DiagnosticDocument {
  id              String   @id @default(uuid())
  diagnosticId    String
  filename        String
  storedFilename  String
  filePath        String
  fileType        String
  mimeType        String
  fileSize        Int
  description     String?
  uploadedBy      String
  createdAt       DateTime @default(now())

  diagnostic Diagnostic @relation(fields: [diagnosticId], references: [id], onDelete: Cascade)

  @@index([diagnosticId])
}
